declare global {
    interface Memory {
        fromString(str: string): MemoryHandle;
        fromBuffer(bytes: ArrayBufferLike): MemoryHandle;
        fromJsonObject(obj: unknown): MemoryHandle;
        allocUInt32(i: number): MemoryHandle;
        allocUInt64(i: bigint): MemoryHandle;
        allocFloat32(i: number): MemoryHandle;
        allocFloat64(i: number): MemoryHandle;
        find(offset: PTR): MemoryHandle;
        /**
         * @internal
         */
        _fromBuffer(buffer: ArrayBuffer): {
            offset: PTR;
            len: I64;
        };
        /**
         * @internal
         */
        _find(offset: PTR): {
            offset: PTR;
            len: I64;
        };
        /**
         * @internal
         */
        _free(offset: PTR): void;
        /**
         * @internal
         */
        _readBytes(offset: PTR): ArrayBuffer;
    }
    var Memory: Memory;
}
export {};
